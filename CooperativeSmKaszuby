-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Archiwum"
(
    "id_Archiwum" integer NOT NULL DEFAULT nextval('"Archiwum_id_Archiwum_seq"'::regclass),
    "Typ_Rekordu" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "id_Rekordu" integer NOT NULL,
    "Data_Archiwizacji" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "Dane_Rekordu" jsonb,
    CONSTRAINT "Archiwum_pkey" PRIMARY KEY ("id_Archiwum")
);

CREATE TABLE IF NOT EXISTS public."Block"
(
    "id_Block" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Miasto" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Ulica" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT block_pk PRIMARY KEY ("id_Block")
);

CREATE TABLE IF NOT EXISTS public."Czynsz"
(
    "id_Czynszu" integer NOT NULL DEFAULT nextval('"Czynsz_id_Czynszu_seq"'::regclass),
    "id_Mieszkania" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Data" date NOT NULL,
    "Kwota" numeric(10, 2) NOT NULL,
    CONSTRAINT "Czynsz_pkey" PRIMARY KEY ("id_Czynszu")
);

CREATE TABLE IF NOT EXISTS public."DefinicjeRaportow"
(
    "id_Definicji" integer NOT NULL DEFAULT nextval('"DefinicjeRaportow_id_Definicji_seq"'::regclass),
    "Nazwa" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Opis" text COLLATE pg_catalog."default",
    "Zapytanie_SQL" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "DefinicjeRaportow_pkey" PRIMARY KEY ("id_Definicji")
);

CREATE TABLE IF NOT EXISTS public."Dokumenty"
(
    "id_Dokumentu" integer NOT NULL DEFAULT nextval('"Dokumenty_id_Dokumentu_seq"'::regclass),
    "Nazwa" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Opis" text COLLATE pg_catalog."default",
    "Data" date NOT NULL,
    "Plik" bytea,
    CONSTRAINT "Dokumenty_pkey" PRIMARY KEY ("id_Dokumentu")
);

CREATE TABLE IF NOT EXISTS public."Finanse"
(
    "id_Finansu" integer NOT NULL DEFAULT nextval('"Finanse_id_Finansu_seq"'::regclass),
    "Typ_Transakcji" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Data" date NOT NULL,
    "Opis" text COLLATE pg_catalog."default",
    "Kwota" numeric(10, 2) NOT NULL,
    CONSTRAINT "Finanse_pkey" PRIMARY KEY ("id_Finansu")
);

CREATE TABLE IF NOT EXISTS public."Kontakty"
(
    "id_Kontaktu" integer NOT NULL DEFAULT nextval('"Kontakty_id_Kontaktu_seq"'::regclass),
    "Imie" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Nazwisko" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Telefon" character varying(100) COLLATE pg_catalog."default",
    "Email" character varying(100) COLLATE pg_catalog."default",
    "Typ_Kontaktu" character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT "Kontakty_pkey" PRIMARY KEY ("id_Kontaktu")
);

CREATE TABLE IF NOT EXISTS public."Korespondencja"
(
    "id_Korespondencji" integer NOT NULL DEFAULT nextval('"Korespondencja_id_Korespondencji_seq"'::regclass),
    "id_Lokatora" integer NOT NULL,
    "Data" date NOT NULL,
    "Rodzaj" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Opis" text COLLATE pg_catalog."default",
    CONSTRAINT "Korespondencja_pkey" PRIMARY KEY ("id_Korespondencji")
);

CREATE TABLE IF NOT EXISTS public."Lokatorzy"
(
    "id_Lokatora" integer NOT NULL DEFAULT nextval('"Lokatorzy_id_Lokatora_seq"'::regclass),
    "Imie" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Nazwisko" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    nr_telefonu character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Mail" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    cena_wynajmu integer NOT NULL,
    cena_sprzedazy numeric(10, 2) NOT NULL,
    id_mieszkania character varying(100) COLLATE pg_catalog."default" NOT NULL,
    id_wlasciciel character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Lokatorzy_pkey" PRIMARY KEY ("id_Lokatora")
);

CREATE TABLE IF NOT EXISTS public."Mieszkanie"
(
    "nr_Mieszkania" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    powieszchnia double precision NOT NULL,
    ilosc_pokoji integer NOT NULL,
    typ_mieszkania integer NOT NULL,
    stan_techniczny character varying(100) COLLATE pg_catalog."default" NOT NULL,
    czynsz numeric(10, 5) NOT NULL,
    CONSTRAINT mieszkanie_pk PRIMARY KEY ("nr_Mieszkania")
);

CREATE TABLE IF NOT EXISTS public."Platnosci"
(
    "id_Platnosci" integer NOT NULL DEFAULT nextval('"Platnosci_id_Platnosci_seq"'::regclass),
    "id_Lokatora" integer NOT NULL,
    "Data" date NOT NULL,
    "Kwota" numeric(10, 2) NOT NULL,
    CONSTRAINT "Platnosci_pkey" PRIMARY KEY ("id_Platnosci")
);

CREATE TABLE IF NOT EXISTS public."Pracownicy"
(
    "id_Pracownika" integer NOT NULL DEFAULT nextval('"Pracownicy_id_Pracownika_seq"'::regclass),
    "Imie" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Nazwisko" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Stanowisko" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Pracownicy_pkey" PRIMARY KEY ("id_Pracownika")
);

CREATE TABLE IF NOT EXISTS public."Regulacje"
(
    "id_Regulacji" integer NOT NULL DEFAULT nextval('"Regulacje_id_Regulacji_seq"'::regclass),
    "Tytu " character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Opis" text COLLATE pg_catalog."default",
    "Data_Wprowadzenia" date NOT NULL,
    "Data_Ostatniej_Modyfikacji" date,
    "Tekst" text COLLATE pg_catalog."default",
    CONSTRAINT "Regulacje_pkey" PRIMARY KEY ("id_Regulacji")
);

CREATE TABLE IF NOT EXISTS public."Rezerwacje"
(
    "id_Rezerwacji" integer NOT NULL DEFAULT nextval('"Rezerwacje_id_Rezerwacji_seq"'::regclass),
    "id_Lokatora" integer NOT NULL,
    "id_Udogodnienia" integer NOT NULL,
    "Data_Poczatkowa" timestamp without time zone NOT NULL,
    "Data_Koncowa" timestamp without time zone NOT NULL,
    CONSTRAINT "Rezerwacje_pkey" PRIMARY KEY ("id_Rezerwacji")
);

CREATE TABLE IF NOT EXISTS public."Cooperative"
(
    "Nazwa" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT Cooperative_pkey PRIMARY KEY ("Nazwa")
);

CREATE TABLE IF NOT EXISTS public."TransakcjeNieruchomosci"
(
    "id_Transakcji" integer NOT NULL DEFAULT nextval('"TransakcjeNieruchomosci_id_Transakcji_seq"'::regclass),
    "Typ_Transakcji" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "id_Mieszkania" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Data_Transakcji" date NOT NULL,
    "Cena" numeric(10, 2) NOT NULL,
    CONSTRAINT "TransakcjeNieruchomosci_pkey" PRIMARY KEY ("id_Transakcji")
);

CREATE TABLE IF NOT EXISTS public."TypyPrac"
(
    "Typ" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "TypyPrac_pkey" PRIMARY KEY ("Typ")
);

CREATE TABLE IF NOT EXISTS public."TypyTransakcji"
(
    "Typ" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "TypyTransakcji_pkey" PRIMARY KEY ("Typ")
);

CREATE TABLE IF NOT EXISTS public."Udogodnienia"
(
    "id_Udogodnienia" integer NOT NULL DEFAULT nextval('"Udogodnienia_id_Udogodnienia_seq"'::regclass),
    "Nazwa" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Opis" text COLLATE pg_catalog."default",
    "Dostepnosc" boolean NOT NULL DEFAULT true,
    CONSTRAINT "Udogodnienia_pkey" PRIMARY KEY ("id_Udogodnienia")
);

CREATE TABLE IF NOT EXISTS public."Zadania"
(
    "id_Zadania" integer NOT NULL DEFAULT nextval('"Zadania_id_Zadania_seq"'::regclass),
    "id_Zgloszenia" integer NOT NULL,
    "id_Pracownika" integer,
    "Data_Przypisania" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "Opis" text COLLATE pg_catalog."default" NOT NULL,
    "Status" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Zadania_pkey" PRIMARY KEY ("id_Zadania")
);

CREATE TABLE IF NOT EXISTS public."Zgloszenia"
(
    "id_Zgloszenia" integer NOT NULL DEFAULT nextval('"Zgloszenia_id_Zgloszenia_seq"'::regclass),
    "id_Lokatora" integer NOT NULL,
    "Data_Zgloszenia" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "Opis" text COLLATE pg_catalog."default" NOT NULL,
    "Status" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Zgloszenia_pkey" PRIMARY KEY ("id_Zgloszenia")
);

ALTER TABLE IF EXISTS public."Block"
    ADD CONSTRAINT Cooperative_block_fk FOREIGN KEY ("id_Block")
    REFERENCES public."Cooperative" ("Nazwa") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS block_pk
    ON public."Block"("id_Block");


ALTER TABLE IF EXISTS public."Czynsz"
    ADD CONSTRAINT czynsz_mieszkanie_fk FOREIGN KEY ("id_Mieszkania")
    REFERENCES public."Mieszkanie" ("nr_Mieszkania") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Finanse"
    ADD CONSTRAINT finanse_Cooperative_fk FOREIGN KEY ("Typ_Transakcji")
    REFERENCES public."TypyTransakcji" ("Typ") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Korespondencja"
    ADD CONSTRAINT korespondencja_lokatorzy_fk FOREIGN KEY ("id_Lokatora")
    REFERENCES public."Lokatorzy" ("id_Lokatora") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Lokatorzy"
    ADD CONSTRAINT mieszkanie_lokatorzy_fk FOREIGN KEY (id_mieszkania)
    REFERENCES public."Mieszkanie" ("nr_Mieszkania") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Mieszkanie"
    ADD CONSTRAINT block_mieszkanie_fk FOREIGN KEY ("nr_Mieszkania")
    REFERENCES public."Block" ("id_Block") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS mieszkanie_pk
    ON public."Mieszkanie"("nr_Mieszkania");


ALTER TABLE IF EXISTS public."Platnosci"
    ADD CONSTRAINT platnosci_lokatorzy_fk FOREIGN KEY ("id_Lokatora")
    REFERENCES public."Lokatorzy" ("id_Lokatora") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Rezerwacje"
    ADD CONSTRAINT rezerwacje_lokatorzy_fk FOREIGN KEY ("id_Lokatora")
    REFERENCES public."Lokatorzy" ("id_Lokatora") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Rezerwacje"
    ADD CONSTRAINT rezerwacje_udogodnienia_fk FOREIGN KEY ("id_Udogodnienia")
    REFERENCES public."Udogodnienia" ("id_Udogodnienia") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."TransakcjeNieruchomosci"
    ADD CONSTRAINT transakcje_mieszkanie_fk FOREIGN KEY ("id_Mieszkania")
    REFERENCES public."Mieszkanie" ("nr_Mieszkania") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Zadania"
    ADD CONSTRAINT zadania_pracownicy_fk FOREIGN KEY ("id_Pracownika")
    REFERENCES public."Pracownicy" ("id_Pracownika") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Zgloszenia"
    ADD CONSTRAINT zgloszenia_lokatorzy_fk FOREIGN KEY ("id_Lokatora")
    REFERENCES public."Lokatorzy" ("id_Lokatora") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;